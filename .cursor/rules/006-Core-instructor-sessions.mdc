---
name: "Instructor Session Guides"
version: "1.0"
description: "Standards and requirements for creating and delivering instructor-led sessions for the React Native Training Course"
priority: "high"
type: "Core"
globs: 
  - "docs/**/*.md"
  - "docs/slides/**/*.*"
  - "docs/instructor-guides/**/*.*"
triggers:
  - file_change
  - file_open
alwaysApply: false
---

# Instructor Session Guides

This rule defines the standards and requirements for creating and delivering instructor-led sessions for the React Native Training Course. It ensures consistent, high-quality instruction across all modules while accommodating different learning paths and participant needs.

## Guide Structure and Format

### Required Components

Each module must have an instructor session guide with these components:

1. **Session Preparation Checklist**
   - Technical environment requirements
   - Required materials and resources
   - Pre-session verification steps
   - Participant prerequisites

2. **Session Blueprint**
   - Detailed timeline with time allocations
   - Slide-by-slide teaching notes
   - Designated interaction points
   - Learning check moments
   - Break recommendations and timing

3. **Demonstration Plan**
   - Live coding segments with prepared code
   - Environment setup instructions
   - Fallback plans for technical issues
   - Step-by-step walkthrough scripts

4. **Learning Path Adaptations**
   - Beginner-focused explanations
   - Intermediate extension points
   - Advanced discussion topics
   - Real-time assessment techniques for each path

5. **Exercise Facilitation Guide**
   - Setup and distribution instructions
   - Clear participant instructions
   - Facilitation tips and interventions
   - Completion verification strategies
   - Solution walkthrough

6. **Q&A Preparation**
   - Anticipated questions and answers
   - Challenge question strategies
   - Handling unknown questions
   - Pharmacy-themed example answers

7. **Session Closure**
   - Key concept summary
   - Preview of next module
   - Assignment instructions
   - Feedback collection method

### Format Standards

- **Timing Notation**: All activities must include precise timing indicators [e.g., 10 min]
- **Instructor Notes**: Use italics for notes that are for instructor eyes only
- **Scripting**: Use blockquotes for suggested verbatim script elements
- **Interaction Cues**: Use 游논 emoji to indicate participant interaction points
- **Pharmacy Theme Integration**: Use 游눍 emoji to highlight pharmacy theme connections
- **Learning Path Indicators**: Use 游릭 (beginner), 游리 (intermediate), 游릮 (advanced) emojis
- **Slide References**: Include slide numbers for all content [e.g., Slide 12]

## Session Delivery Standards

### Preparation Requirements

Before each training session, instructors must:

1. Complete a technical environment check:
   - Test all demo code on the presentation machine
   - Verify access to Expo Snack, repository, and other tools
   - Prepare backup code snippets for all demonstrations
   - Check projector/screen compatibility

2. Review participant information:
   - Pre-training assessment results
   - Learning path distribution
   - Experience levels and backgrounds
   - Specific areas of interest or concern

3. Customize session materials:
   - Adjust examples for the specific participant group
   - Prepare pharmacy-themed scenarios relevant to participants
   - Select appropriate challenge levels based on group
   - Determine which advanced topics to emphasize or de-emphasize

### Interaction Techniques

Instructors must employ these engagement strategies:

1. **Opening Techniques**:
   - Start with a compelling pharmacy use case
   - Conduct a quick knowledge check to gauge the room
   - Set clear expectations for the session
   - Create an inclusive, question-friendly environment

2. **During Instruction**:
   - Use the "explain, demonstrate, challenge, review" sequence
   - Pause for questions after each key concept
   - Conduct mini code reviews of sample code
   - Use analogies that connect React Native concepts to pharmacy workflows

3. **Exercise Facilitation**:
   - Provide clear time boxes for all activities
   - Circulate and provide targeted assistance
   - Conduct mid-exercise check-ins for progress
   - Facilitate peer collaboration when appropriate
   - Guide rather than solve for participants

4. **Adapting in Real-Time**:
   - Use visual cues to gauge understanding
   - Employ impromptu polls to check comprehension
   - Adjust pace based on group progress
   - Have extension activities ready for quick finishers

5. **Closure Activities**:
   - Facilitate reflection on key learnings
   - Connect session content to the broader course
   - Preview upcoming content and set expectations
   - Assign specific preparation for the next session

### Learning Path Management

Instructors must accommodate different learning paths:

1. **Universal Techniques**:
   - Establish baseline understanding before building complexity
   - Use concrete examples before abstract concepts
   - Reference real-world applications
   - Connect new material to previously covered concepts

2. **Multi-Level Instruction**:
   - Start explanations at beginner level, then layer complexity
   - Explicitly note when diving into intermediate/advanced territory
   - Use sidebars for advanced concepts without derailing main thread
   - Pair participants of different levels for peer learning

3. **Differentiated Support**:
   - Provide scaffolded worksheets for beginners
   - Offer challenge extensions for advanced participants
   - Create floating help system during exercises
   - Use targeted questioning appropriate to participant level

## Integration with Course Materials

### Alignment with Slides

- Each instructor note must reference specific slide numbers
- Notes must extend beyond slide content, not merely repeat it
- Slides should be presentation-focused while guides contain detailed notes
- Transitions between slides must be explicitly scripted in guides

### Repository Integration

- All code demonstrations must reference specific repository files
- Live coding segments must result in code that matches repository examples
- Walkthrough instructions must include file paths and line number references
- Instructors must be familiar with the complete repository structure

### Webex Connection

- Session guides must include specific points to reference the Webex channel
- Pre-session and post-session Webex activities must be included
- Instructions for transitioning discussions to Webex must be provided
- Guidance for following up on Webex questions during sessions

### Articulate Integration

- Clearly indicate which content is covered in Articulate vs. instructor-led
- Provide instructions for referencing Articulate modules during sessions
- Note areas where instructor elaboration complements Articulate content
- Include strategies for addressing questions about Articulate content

## Example: Instructor Session Guide Format

```markdown
# Module 2: Components and Props - Instructor Session Guide

> Preparation Time: 45 minutes
> Session Duration: 3 hours
> Required Materials: Module 2 slides, component examples repository, pharmacy component worksheet

## Session Preparation Checklist

- [ ] Technical setup:
  - [ ] Clone/pull latest repository code
  - [ ] Test MedicationList component demo
  - [ ] Verify Expo Snack links for exercises
  - [ ] Prepare fallback code snippets

- [ ] Content preparation:
  - [ ] Review participant experience levels
  - [ ] Customize pharmacy examples if needed
  - [ ] Prepare answers for common props questions
  - [ ] Select challenge level for afternoon exercise

## Session Blueprint

### Introduction [15 min] [Slides 1-5]

> "Welcome to Module 2, where we'll explore React Native components and props through the lens of building pharmacy applications."

游논 **Opening Activity**: Ask participants to list UI elements they'd expect in a medication details screen (2 min)

游눍 **Pharmacy Connection**: Discuss how breaking down a pharmacy app into components mirrors how pharmacists organize medication information

### Component Fundamentals [30 min] [Slides 6-15]

*Key teaching points:*
- Component philosophy in React Native
- Functional vs. class components
- Component lifecycle in the context of pharmacy apps

游릭 **For beginners**: Emphasize the building-block nature of components
游릮 **For advanced**: Mention performance considerations in complex component trees

#### Live Demonstration: Creating a MedicationItem Component [15 min]

```jsx
// Start with this shell
const MedicationItem = () => {
  return (
    <View style={styles.container}>
      {/* We'll build this together */}
    </View>
  );
};
```

*Potential issues:* Watch for import errors; have complete example ready at `/examples/module2/MedicationItem.js`
```

## Instructor Guide Template

Based on these standards, the instructor guide template should:

1. Begin with session metadata (duration, prerequisites, materials)
2. Include comprehensive preparation checklist
3. Provide detailed session flow with timing
4. Include facilitation notes for each activity
5. Offer scripting suggestions for complex concepts
6. Identify learning path adaptations
7. Provide troubleshooting guidance
8. Include slide-by-slide teaching notes

## Continuous Improvement Process

Instructor guides should evolve through:

1. **Pre-Training Review**: Complete readthrough with mock delivery
2. **Session Feedback**: Collect participant feedback on clarity and effectiveness
3. **Instructor Notes**: Add margin notes during actual delivery
4. **Post-Session Updates**: Incorporate lessons learned after each delivery
5. **Cross-Instructor Validation**: Have multiple instructors review and contribute

All instructor guides must be version-controlled in the repository and updated at least once per training delivery cycle. 